# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deployment

on:
  workflow_run:
    workflows: ['Lint']
    branches: [main]
    types:
      - completed

env:
  SERVER_CWD: ~/projects/moneybackward-fe

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: [1.0.11]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SECRET_KEY }}
          script: |
            echo "SSH OK"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Create Dotenv File
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build the project
        run: bun run build:pwa

      - name: Zip artifact for deployment
        run: zip -rq release.zip ./* .quasar

      - name: Copy to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SECRET_KEY }}
          source: release.zip
          target: ${{ env.SERVER_CWD }}

      - name: Unzip Artifacts and Remove Zip
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SECRET_KEY }}
          script: |
            cd ${{ env.SERVER_CWD }}
            unzip -oq release.zip
            rm release.zip

      - name: Restart PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SECRET_KEY }}
          script: |
            cd ${{ env.SERVER_CWD }}
            export PATH=$PATH:~/.bun/bin
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            pm2 restart ecosystem.config.cjs
